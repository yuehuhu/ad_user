function BallBox(a, b) {
	var c = this.user = document.getElementById(a);
	var b = this.opts = b || {};
	this.width = b.width || c.offsetWidth;
	this.height = b.height || c.offsetHeight;
	this.child = []
}
BallBox.prototype.addBall = function (a) {
	this.child.push(a);
	if (a.e.parentNode != this.user) {
		this.user.appendChild(a.e)
	}
};
BallBox.prototype.ballRun = function () {
	clearInterval(this.ballRunTimer);
	var g = this;
	var w = this.width;
	var h = this.height;
	var k = this.isColl;
	var l = this.coll;
	// var x = this.isInbox;
	this.ballRunTimer = setInterval(function () {
		var a = g.child;
		var c = a.length;
		for (var i = 0; i < c; i++) {
			a[i].foot();
		}
		for (var i = 0; i < c; i++) {
			var d = a[i];
			var b = d.b;
			if (d.x < b) {
				d.x = b;
				d.sx *= -1
			}
			if (d.y < b) {
				d.y = b;
				d.sy *= -1
			}
			var e = w - b;
			if (d.x > e) {
				d.x = e;
				d.sx *= -1
			}
			var f = h - b;
			if (d.y > f) {
				d.y = f;
				d.sy *= -1
			}
		}
		for (var i = 0; i < c; i++) {
			for (var j = i + 1; j < c; j++) {
				if (k(a[i], a[j])) {
					l(a[i], a[j]);
					a[i].collNum++;
					a[i].callBack(a[i].collNum);
					a[j].collNum++;
					a[j].callBack(a[j].collNum)
				}
			}
		}
	}, 30)
};
BallBox.prototype.ballStop = function () {
	clearInterval(this.ballRunTimer)
};
BallBox.prototype.coll = function (a, b) {
	var c = b.x - a.x;
	var d = b.y - a.y;
	var e = b.sx - a.sx;
	var f = b.sy - a.sy;
	var g = Math.atan2(f, e);
	var h = Math.atan2(-d, -c);
	var i = Math.abs(h - g);
	var D = Math.PI / 2;
	if (i <= 3 * D && i >= D) return;
	var j = a.m || 1;
	var k = b.m || 1;
	var l = j + k;
	var m = ((j - k) * a.sx + 2 * k * b.sx) / l;
	var n = ((k - j) * b.sx + 2 * j * a.sx) / l;
	var o = ((j - k) * a.sy + 2 * k * b.sy) / l;
	var p = ((k - j) * b.sy + 2 * j * a.sy) / l;
	a.sx = m;
	a.sy = o;
	b.sx = n;
	b.sy = p
};
BallBox.prototype.isColl = function (a, b) {
	if (a.stopfoot || b.stopfoot) return false;
	var d = Math.pow(a.x - b.x, 2) + Math.pow(a.y - b.y, 2);
	var c = Math.pow(a.b + b.b, 2);
	return d < c
};

function Ball(a) {
	var a = this.json = a || {};
	var d = this.type = a.type || 'ball';
	var b = this.b = a.b || 15;
	var f = this.borderWidth = a.borderWidth || 0;
	var g = this.borderColor = a.borderColor || '#000';
	var x = this.x = a.x || b;
	var y = this.y = a.y || b;
	var h = this.sx = a.sx || 3;
	var i = this.sy = a.sy || 3;
	var m = this.m = a.m || (b / 30);
	var c = this.c = a.c || 'pink';
	var e = this.e = a.e || document.createElement('button');
	var j = this.html = a.html;
	var k = this.opa = a.opa || 1;
	var l = this.fontSize = a.fontSize || 18;
	var t = this.t = a.t || 0;
	var m1 = this.md_x = a.md_x || 0;
	var m2 = this.md_y = a.md_y || 0;
	var mid = this.mid = a.mid || 1;
	var o = this.isDown = a.isDown || false;
	var id = this.id = a.id || [];
	var ad = this.ad = a.ad || [];
	var n = this.callBack = a.callBack ||
		function () { };
	this.collNum = 0;
	this.initStyle();
	this.addEvent();
	this.initOthers(t);
}
Ball.prototype.initStyle = function () {
	var b = this.b;
	var s = this.e.style;
	s.position = 'absolute';
	s.top = s.left = 0;
	s.width = s.height = (b - this.borderWidth) * 2 + 'px';
	s.borderRadius = '50%';
	s.background = this.c;
	s.backgroundSize = 'cover';
	s.border = this.borderWidth + 'px solid ' + this.borderColor;
	s.opacity = this.opa;

	if (this.html) {
		this.e.innerHTML = this.html;
		s.textAlign = 'center';
		s.lineHeight = (b - this.borderWidth) * 2 + 'px';
		s.fontSize = this.fontSize + 'px'
	}
	this.setPos()
};
Ball.prototype.addEvent = function () {
	var a = this;
	this.e.onmousedown = function () {
		a.stopFoot();
		a.mouseDown();
	};
	this.e.onmouseup = function () {
		a.isInBox();
		a.startFoot();
		a.isDown = false;
	};
	this.e.onmouseenter = function () {
		a.stopFoot();
	};
	this.e.onmouseout = function () {
		a.startFoot();
	}
	this.e.onmousemove = function () {
		a.moveFoot();
	};
};
Ball.prototype.mouseDown = function () {
	this.isDown = true;
	//获取鼠标按下时坐标
	var m_down_x = event.pageX;
	var m_down_y = event.pageY;
	// console.log("a.x: " + m_down_x +"  a.y: " + m_down_y)

	//获取div坐标
	var dx = this.x;
	var dy = this.y;

	//获取鼠标与div偏移量
	this.md_x = m_down_x - dx;
	this.md_y = m_down_y - dy;
};

Ball.prototype.moveFoot = function () {
	//获取鼠标按下时坐标
	var m_move_x = event.pageX;
	var m_move_y = event.pageY;

	//实时更新div的坐标
	var dx = this.x;
	var dy = this.y;

	if (this.isDown) {
		//获取新div坐标，鼠标实时坐标 - 鼠标与div的偏移量
		var ndx = m_move_x - this.md_x;
		var ndy = m_move_y - this.md_y;
		//把新div坐标值赋给div对象
		var newx = ndx;
		var newy = ndy;
		var b = this.b;
		var x = parseInt(newx - b);
		var y = parseInt(newy - b);
		this.e.style.transform = 'translate(' + x + 'px,' + y + 'px)';
		this.e.style.webkitTransform = 'translate(' + x + 'px,' + y + 'px)'
		this.x = x;
		this.y = y;
	}
};
Ball.prototype.initOthers = function (a) {
	var b = this.html = a;
	var s = this.e.style;
	this.e.innerHTML = b;
	s.textAlign = 'center';
	s.lineHeight = (this.b - this.borderWidth) * 2 + 'px';
	s.fontSize = this.fontSize + 'px'
	var u = this.e;
	var userId = 'user' + a;
	u.id = userId;
	this.mid = 1;
};
Ball.prototype.foot = function (n) {
	if (this.stopfoot) return;
	var n = n || 1;
	this.x += this.sx * n;
	this.y += this.sy * n;
	this.setPos()
};
Ball.prototype.startFoot = function () {
	this.stopfoot = false;
	this.isDown = false;

	this.e.style.zIndex = 1
};
Ball.prototype.isInBox = function () {
	var m_move_x = event.pageX;
	var m_move_y = event.pageY;
	var yl = 3.43 * m_move_x - 1686;
	var yr = -3.43 * m_move_x + 2600;
	if (m_move_x > 550 && m_move_x < 700 && (m_move_y > yl || m_move_y < yr)) {
		this.e.style.display = "none";
		var trashbox = document.getElementById("trashbox");
		var childnum = trashbox.children;
		if (childnum.length != 0) {
			console.log(childnum[0].id);
			var id = childnum[0].id;
			console.log("remove child");
			trashbox.removeChild(childnum[0]);
			var ballnum = document.getElementById(id);
			console.log("ballnum.id" + ballnum.id)
			ballnum.style.display = "block";
		}
		var boxnum = document.createElement('div');
		boxnum.id = this.e.id;
		var s = boxnum.style;
		boxnum.innerHTML = this.e.id;
		s.textAlign = 'center';
		s.color = 'black';
		s.fontSize = '18px'
		var u = this.e;
		trashbox.appendChild(boxnum);
		this.getAd();
	}

};
Ball.prototype.stopFoot = function () {
	this.stopfoot = true;
	this.e.style.zIndex = 999
};
Ball.prototype.setPos = function () {
	var b = this.b;
	var x = parseInt(this.x - b);
	var y = parseInt(this.y - b);
	this.e.style.transform = 'translate(' + x + 'px,' + y + 'px)';
	this.e.style.webkitTransform = 'translate(' + x + 'px,' + y + 'px)'
};
Ball.prototype.setOpa = function (n) {
	var a = this.opa = n;
	this.e.style.opacity = n
};
Ball.prototype.getAd = function () {
	var objS = document.getElementById('trashbox');
	var user = objS.children[0].id;
	console.log("user: "+user);
	var data = {};
	data['user'] = user;
	var a=this;
	console.log("getAd");
	$.ajax({
		type: 'POST',
		url: "http://127.0.0.1:5000/province",
		data: JSON.stringify(data),  //转化字符串 
		contentType: 'application/json; charset=UTF-8',
		success: function (data) { //成功的话，得到消息
			console.log("success: " + data);
			a.boom(data)
			return "success"
		}
	});  


	// var a = ["19", "97", "1", "23"];
	// return a
};
Ball.prototype.mathLine = function (elementId, t) {
	if (elementId == "ball1") {
		return {
			x: 580 - 4 * t ^ 2,
			y: 230 - t * 8
		}
	} else if (elementId == "ball2") {
		return {
			x: 580 + 8 * t,
			y: 230 - 4 * t ^ 2
		}
	} else if (elementId == "ball3") {
		return {
			x: 580 + 10 * t ^ 3,
			y: 230 - 0.5 * t ^ 3
		}
	} else if (elementId == "ball4") {
		return {
			x: 580 + t ^ 2,
			y: 230 - 5 * t ^ 3
		}
	}
};
Ball.prototype.moveElement = function (elementId, t) {
	const ele = document.getElementById(elementId);
	ele.style.display = "block";
	const newXY = this.mathLine(elementId, t);
	ele.style.left = newXY.x + 'px';
	ele.style.top = newXY.y + 'px';
};
Ball.prototype.boom = function (data) {
	var i = 1;
	var a = data;
	console.log(a);
	var ball1 = document.getElementById("ball1");
	ball1.innerHTML = a[0];
	var ball2 = document.getElementById("ball2");
	ball2.innerHTML = a[1];
	var ball3 = document.getElementById("ball3");
	ball3.innerHTML = a[2];
	var ball4 = document.getElementById("ball4");
	ball4.innerHTML = a[3];

	var interval = setInterval(() => {
		if (i <= 25) {
			this.moveElement('ball1', i);
			this.moveElement('ball2', i);
			this.moveElement('ball3', i);
			this.moveElement('ball4', i);
			i++;
		} else {
			clearInterval(interval);
		}
	}, 10);
};
